<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Verify Email</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"
      crossorigin="anonymous">
    <style>
      body {
        background: #f6f6f9;
        padding: 4vw;
        height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        position: relative;
        background-color: black;
      }
      img {
        position: absolute;
        width: 100%;
        height: 100%;
        object-fit: cover;
        opacity: 0.4;
      }
      
      form {
        position: absolute;
        padding: 2rem;
        border-radius: 4px;
        box-shadow: 0 2px 4px rgba(0,0,0,.1);
        max-width: 400px;
        background: #fff;
        
        .form-control {
          display: block;
          height: 50px;
          margin-right: 0.5rem;
          text-align: center;
          font-size: 1.25rem;
          min-width: 0;
          
          &:last-child {
            margin-right: 0;
          }
        }
      }
    </style>
  </head>
  <body>
    <img src="https://assets.nflxext.com/ffe/siteui/vlv3/b4c7f092-0488-48b7-854d-ca055a84fb4f/319e80c0-66aa-416c-9407-c7377a8c126a/VN-vi-20231204-popsignuptwoweeks-perspective_alpha_website_large.jpg" />
    <form action="/auth/verify-email" method="POST">
      <h4 class="text-center mb-4">Nhập mã xác thực chúng tôi đã gửi
        vào email của bạn!</h4>
      <div class="d-flex mb-3">
        <input type="tel" maxlength="1" pattern="[0-9]" class="form-control" name="first" autofocus required>
        <input type="tel" maxlength="1" pattern="[0-9]" class="form-control" name="second" required>
        <input type="tel" maxlength="1" pattern="[0-9]" class="form-control" name="third" required>
        <input type="tel" maxlength="1" pattern="[0-9]" class="form-control" name="fourth" required>
        <input type="tel" maxlength="1" pattern="[0-9]" class="form-control" name="fifth" required>
        <input type="tel" maxlength="1" pattern="[0-9]" class="form-control" name="sixth" required>
      </div>
      <button type="submit" class="w-100 btn btn-primary">Verify
        account</button>
    </form>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
      crossorigin="anonymous"></script>
    <script>
      const form = document.querySelector('form')
      const inputs = form.querySelectorAll('input')
      const KEYBOARDS = {
        backspace: 8,
        arrowLeft: 37,
        arrowRight: 39,
      }
      function handleInput(e) {
        const input = e.target
        const nextInput = input.nextElementSibling
        if (nextInput && input.value) {
          nextInput.focus()
          if (nextInput.value) {
            nextInput.select()
          }
        }
      }
      function handlePaste(e) {
        e.preventDefault()
        const paste = e.clipboardData.getData('text')
        inputs.forEach((input, i) => {
          input.value = paste[i] || ''
        })
      }
      function handleBackspace(e) { 
        const input = e.target
        if (input.value) {
          input.value = ''
          return
        }
        
        input.previousElementSibling.focus()
      }
      function handleArrowLeft(e) {
        const previousInput = e.target.previousElementSibling
        if (!previousInput) return
        previousInput.focus()
      }
      function handleArrowRight(e) {
        const nextInput = e.target.nextElementSibling
        if (!nextInput) return
        nextInput.focus()
      }
      form.addEventListener('input', handleInput)
      inputs[0].addEventListener('paste', handlePaste)
      inputs.forEach(input => {
        input.addEventListener('focus', e => {
          setTimeout(() => {
            e.target.select()
          }, 0)
        })
        
        input.addEventListener('keydown', e => {
          switch(e.keyCode) {
            case KEYBOARDS.backspace:
              handleBackspace(e)
              break
            case KEYBOARDS.arrowLeft:
              handleArrowLeft(e)
              break
            case KEYBOARDS.arrowRight:
              handleArrowRight(e)
              break
            default:  
          }
        })
      })
    </script>
  </body>
</html>